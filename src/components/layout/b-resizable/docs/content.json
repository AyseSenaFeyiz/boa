[
    {
        "name": "BResizable",
        "desc": "Resizable BOA Component",
        "sample": "<BResizable width={width} height={height} minWidth={minWidth} minHeight={minHeight} maxWidth={maxWidth} maxHeight={maxHeight} isResizable={isResizable} onResize={onResize}>{content}</div></BResizable>"
    },
    {
        "name": "Props",
        "infoArray": [
            {
                "name": "width",
                "type": "oneOfType([number,string]",
                "header": "not required",
                "desc": "The width property is used to set the width of a resizable component. For example, you can set 300, '300px', 50%. If ommited, set 'auto'."
            },
            {
                "name": "height",
                "type": "oneOfType([number,string]",
                "header": "not required",
                "desc": "The height property is used to set the height of a resizable component. For example, you can set 300, '300px', 50%. If ommited, set 'auto'."
            },
            {
                "name": "minWidth",
                "type": "number",
                "header": "not required",
                "desc": "The minWidth property is used to set the minimum width of a resizable component."
            },
            {
                "name": "minHeight",
                "type": "number",
                "header": "not required",
                "desc": "The minHeight property is used to set the minimum height of a resizable component."
            },
            {
                "name": "maxWidth",
                "type": "number",
                "header": "not required",
                "desc": "The maxWidth property is used to set the maximum width of a resizable component."
            },
            {
                "name": "maxHeight",
                "type": "number",
                "header": "not required",
                "desc": "The maxheight property is used to set the maximum height of a resizable component."
            },
            {
                "name": "grid",
                "type": "arrayOf(number)",
                "header": "not required",
                "desc": "The grid property is used to specify the increments that resizing should snap to. Defaults to [1, 1]."
            },
            {
                "name": "lockAspectRatio",
                "type": "bool",
                "header": "not required",
                "desc": "The lockAspectRatio property is used to lock aspect ratio. If ommited, set false."
            },
            {
                "name": "customClass",
                "type": "string",
                "header": "not required",
                "desc": "The customClass property is used to set the custom className of a resizable component."
            },
            {
                "name": "customStyle",
                "type": "object",
                "header": "not required",
                "desc": "The customStyle property is used to set the custom classStyle of a resizable component."
            },
            {
                "name": "handleStyle",
                "type": "shape({ top:object, right:object, bottom:object, left:object, topRight:object, bottomRight:object, bottomLeft:object, topLeft:object })",
                "header": "not required",
                "desc": "The handleStyle property is used to override the style of one or more resize handles. Only the axis you specify will have its handle style replaced. If you specify a value for right it will completely replace the styles for the right resize handle, but other handle will still use the default styles."
            },
            {
                "name": "isResizable",
                "type": "shape({ top:bool, right:bool, bottom:bool, left:bool, topRight:bool, bottomRight:bool, bottomLeft:bool, topLeft:bool })",
                "header": "not required",
                "desc": "The isResizable property is used to set the resizable permission of a resizable component."
            }
        ]
    },
    {
        "name": "Events",
        "infoArray": [
            {
                "name": "onClick",
                "header": "function(event)",
                "desc": "Calls when resizable component clicked."
            },
            {
                "name": "onTouchStart",
                "header": "function(event)",
                "desc": "Calls when resizable component touched."
            },
            {
                "name": "onDoubleClick",
                "header": "function(event)",
                "desc": "Calls when resizable component double clicked."
            },
            {
                "name": "onResizeStart",
                "header": "function(event)",
                "desc": "Calls when resizable component resize starts. Calls back with (direction: string, styleSize: object, clientSize: object, event: object)"
            },
            {
                "name": "onResize",
                "header": "function(event)",
                "desc": "Calls when resizable component resize. Calls back with (direction: string, styleSize: object, clientSize: object, delta: object))"
            },
            {
                "name": "onResizeStop",
                "header": "function(event)",
                "desc": "Calls back with (direction: string, styleSize: object, clientSize: object, delta: object))"
            }
        ]
    }
]