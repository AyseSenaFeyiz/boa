[
  {
    "name": "BIconMenu",
    "desc": "IconMenu BOA Component",
    "sample": " <BIconMenu state={this.state.context} iconType='vertical' items={items}/></IconButton>"
  },
  {
    "name": "Props",
    "infoArray": [
      {
        "name": "iconType",
        "type": "PropTypes.oneOf(['vertical', 'horizontal', 'custom'])",
        "header": "required",
        "desc": "Type of the `IconButton` to render. If 'custom' required customIcon button"
      },
      {
        "name": "customIcon",
        "type": "object",
        "header": "not required",
        "desc": "Custom icon for 'IconButton' to render. Sample: 'customIcon: {fontIcon : \"muidocs-icon-action-home\"}' Options: svgIcon, fontIcon or icon "
      },
      {
        "name": "items",
        "type": "array",
        "header": "not required",
        "desc": "Menu items with 'text' and 'value' props."
      },
      {
        "name": "menuItems",
        "type": "array",
        "header": "not required",
        "desc": "Menu items already created by MenuItem type."
      },
      {
        "name": "anchorOrigin",
        "type": "object",
        "header": "not required",
        "desc": "This is the point on the icon where the menu `targetOrigin` will attach."
      },
      {
        "name": "animated",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the popover will apply transitions when it gets added to the DOM."
      },
      {
        "name": "className",
        "type": "string",
        "header": "not required",
        "desc": "The CSS class name of the root element."
      },
      {
        "name": "iconStyle",
        "type": "object",
        "header": "not required",
        "desc": "Override the inline-styles of the underlying icon element."
      },
      {
        "name": "menuStyle",
        "type": "object",
        "header": "not required",
        "desc": "Override the inline-styles of the menu element."
      },
      {
        "name": "multiple",
        "type": "propTypes.stringOrNumber",
        "header": "not required",
        "desc": "The width of the menu."
      },
      {
        "name": "open",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the `IconMenu` is opened."
      },
      {
        "name": "style",
        "type": "object",
        "header": "not required",
        "desc": "Override the inline-styles of the root element."
      },
      {
        "name": "targetOrigin",
        "type": "object",
        "header": "not required",
        "desc": "This is the point on the menu which will stick to the menu origin."
      },
      {
        "name": "touchTapCloseDelay",
        "type": "number",
        "header": "not required",
        "desc": " Sets the delay in milliseconds before closing the menu when an item is clicked. If set to 0 then the auto close functionality will be disabled."
      },
      {
        "name": "useLayerForClickAway",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the popover will render on top of an invisible layer, which will prevent clicks to the underlying elements."
      }
    ]
  },
  {
    "name": "Events",
    "infoArray": [
      {
        "name": "onChange",
        "header": "onChange(parameter)",
        "desc": "Callback function fired when the menu item is selected."
      },
      {
        "name": "onClick",
        "header": "onChange(parameter)",
        "desc": "Callback function fired when the IconButton element is clicked."
      }
    ]
  }
]
