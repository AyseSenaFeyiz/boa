[
  {
    "name": "BDrawer",
    "desc": "Drawer BOA Component",
    "sample": " <BDrawer disableSwipeToOpen: false,  docked: true, open: null, openSecondary: false, swipeAreaWidth: 100, width: null zDepth: 2 /></BDrawer>"
  },
  {
    "name": "Props",
    "infoArray": [
      {
        "name": "children",
        "type": "node",
        "header": "not required",
        "desc": "The contents of the `Drawer`"
      },
      {
        "name": "containerStyle",
        "type": "object",
        "header": "not required",
        "desc": "Override the inline-styles of the container element."
      },
      {
        "name": "disableSwipeToOpen",
        "type": "bool",
        "header": "not required",
        "desc": "If true, swiping sideways when the Drawer is closed will not open it."
      },
      {
        "name": "docked",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the Drawer will be docked. In this state, the overlay won't show and clicking on a menu item will not close the Drawer."
      },
      {
        "name": "open",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the Drawer is opened. Providing a value will turn the Drawer into a controlled component."
      },
      {
        "name": "openSecondary",
        "type": "bool",
        "header": "not required",
        "desc": "If true, the Drawer is positioned to open from the opposite side."
      },
      {
        "name": "swipeAreaWidth",
        "type": "number",
        "header": "not required",
        "desc": "The width of the left most (or right most) area in pixels where the Drawer can be swiped open from."
      },
      {
        "name": "overlayStyle",
        "type": "object",
        "header": "not required",
        "desc": "Override the inline-styles of the `Overlay` component that is rendered behind the `Drawer`."
      },
      {
        "name": "width",
        "type": "number",
        "header": "not required",
        "desc": "The width of the Drawer in pixels. Defaults to using the values from theme."
      },
      {
        "name": "zDepth",
        "type": "number",
        "header": "not required",
        "desc": "propTypes.zDepth"
      }
    ]
  },
  {
    "name": "Events",
    "infoArray": [
      {
        "name": "openDrawer",
        "header": "function(event)",
        "desc": "Callback function fired when the `open` state of the `Drawer` is requested to be changed."
      },
      {
        "name": "dockDrawer",
        "header": "function(event)",
        "desc": "Callback function fired when the docked on drawer."
      }
    ]
  }
]
