[
    {
        "name": "BComboBox",
        "desc": "The component can be used as one of types are standard combobox, multiColumn combobox and multiSelect combobox.",
        "sample": "<BComboBox hintText='Hint Text' multiSelect={false} multiColumn={false} floatingText='Floating Text' displayMemberPath='text' valueMemberPath='plateNo' value={[34]} onSelect={myOnSelect(param1, param2, param3, param4)} dataSource={[ {'id':1, 'text': 'Ä°stanbul','plateNo': '34'}, {'id':2, 'text': 'Ankara','plateNo': '06'},{'id':3, 'text': 'Kocaeli', 'plateNo':'41'}]}  />"
    },
    {
        "name": "Props",
        "infoArray": [
            {
                "name": "autoWidth",
                "type": "boolean",
                "header": "not required",
                "desc": "If true, the width will automatically be set according to the items inside the menu. To control the width in CSS instead, leave this prop set to false."
            },
            {
                "name": "hintText",
                "type": "string",
                "header": "not required",
                "desc": "Placeholder text for html input"
            },
            {
                "name": "errorText",
                "type": "string",
                "header": "not required",
                "desc": "Error text for html input validation"
            },
            {
                "name": "floatingLabelText",
                "type": "string",
                "header": "not required",
                "desc": "The content of the floating label."
            },
            {
                "name": "disabled",
                "type": "boolean",
                "header": "not required",
                "desc": "If true, the select field will be disabled."
            },
            {
                "name": "displayMemberPath",
                "type": "string",
                "header": "not required",
                "desc": "sets which member of the source are considered as display-text. Default is 'task'"
            },
            {
                "name": "valueMemberPath",
                "type": "string",
                "header": "not required",
                "desc": "sets which member of the source are considered as value. Default is 'id'"
            },
            {
                "name": "displayLabelMemberPath",
                "type": "string array",
                "header": "not required",
                "desc": "Sets which member(s) of the dataSource are considered as display-text. Default is value of displayMemberPath."
            },
            {
                "name": "displayLabelSeperator",
                "type": "string",
                "header": "not required",
                "desc": "Sets which text are considered as seperator in displayLabelMemberPath. Default is null"
            },            
            {
                "name": "isAllOptionIncluded",
                "type": "boolean",
                "header": "not required",
                "desc": "Determines All Option Description needs to be added or not to do. Default is false."
            },
            {
                "name": "allOptionText",
                "type": "string",
                "header": "not required",
                "desc": "Sets the text of 'All Option'. Default is 'Hepsi'."
            },
            {
                "name": "allOptionValue",
                "type": "any",
                "header": "not required",
                "desc": "Sets the value of 'All Option'. Default is -1."
            },
            {
                "name": "fullWidth",
                "type": "boolean",
                "header": "not required",
                "desc": "If true, the select field will take up the full width of its container. Default is true."
            },
            {
                "name": "columns",
                "type": "array",
                "header": "required",
                "desc": "Array of strings used to populate the columns."
            },
            {
                "name": "dataSource",
                "type": "array",
                "header": "required",
                "desc": "Array of strings used to populate the list."
            },
            {
                "name": "defaultValue",
                "type": "string array",
                "header": "not required",
                "desc": "The value(s) that is/are currently selected for default. DefaultValue works only after first render."
            },            
            {
                "name": "value",
                "type": "string array",
                "header": "not required",
                "desc": "The value(s) that is/are currently selected."
            },
            {
                "name": "resetValue",
                "type": "function",
                "header": "not required",
                "desc": "To set defaultValue to the combobox as initial value. "
            },
            {
                "name": "getValue",
                "type": "function",
                "header": "not required",
                "desc": "To get value(s) of selected items. Return type is Array if multiSelect is true and selectedItem count is more than 1, otherwise return stype is object."
            },            
            {
                "name": "getSelectedItems",
                "type": "function",
                "header": "not required",
                "desc": "To get selected item(s). Return type is Array."
            }
        ]
    },
    {
        "name": "Events",
        "infoArray": [
            {
                "name": "onSelect",
                "header": "function(selectedIndexes: int[], selectedItems: object[], selectedValues: object[]) => void",
                "desc": "Fired when select changes."
            }
        ]
    }
]