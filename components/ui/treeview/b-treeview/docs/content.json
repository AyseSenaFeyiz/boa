[
  {
    "name": "BTreeViewNEw",
    "desc": "BOA TreeViewNew Component",
    "sample": "<BTreeViewNew data={YourData} />"
  },
  {
    "name": "Props",
    "infoArray": [
      {
        "name": "data",
        "type": "Object or Array",
        "header": "required",
        "desc": "(Go to Data Attributes for the detail) Data that drives the tree view. State-driven effects can be built by manipulating the attributes in this object. Also supports an array for multiple nodes at the root level."
      },
      {
        "name": "selectedNode",
        "type": "object",
        "header": "not Required",
        "desc": "Sets the selected node that is currently selected."
      },
      {
        "name": "style",
        "type": "object",
        "header": "not Required",
        "desc": "Sets the tree view styling. Defaults to src/themes/default."
      },
      {
        "name": "height",
        "type": "object",
        "header": "not Required",
        "desc": "Sets the tree view height."
      },
      {
        "name": "width",
        "type": "object",
        "header": "not Required",
        "desc": "Sets the tree view width."
      }
    ]
  },
  {
    "name": "Data Attributes",
    "infoArray": [
      {
        "name": "id",
        "type": "any",
        "desc": "The node key."
      },
      {
        "name": "name",
        "type": "string",
        "desc": "The name prop passed into the Header component."
      },
      {
        "name": "isSelected",
        "type": "boolean",
        "desc": "If true, the node is checked"
      },
      {
        "name": "isExpanded",
        "type": "boolean",
        "desc": "If true, the node is open"
      },
      {
        "name": "isHidden",
        "type": "boolean",
        "desc": "If true, the node is un visible"
      },
      {
        "name": "children",
        "type": "array",
        "desc": "The children attached to the node. This value populates the subtree at the specific node. Each child is built from the same basic data structure"
      }
    ]
  },
  {
    "name": "Methods",
    "infoArray": [
      {
        "name": "getValue()",
        "type": "Object",
        "desc": "Get the node that is currently selected."
      },
      {
        "name": "getValues()",
        "type": "Object or Array",
        "desc": "Get the all nodes in side of tree view."
      },
      {
        "name": "expandAll()",
        "type": "void",
        "desc": "Expand all nodes of the tree view."
      },
      {
        "name": "collapseAll()",
        "type": "void",
        "desc": "Collapse all nodes of the tree view."
      }
    ]
  },
  {
    "name": "Events",
    "infoArray": [
      {
        "name": "onToggle",
        "header": "function(node: object, toggled: boolean)",
        "desc": "Callback function when a node is toggled / clicked. Passes 2 attributes: the data node and it's toggled boolean state."
      }
    ]
  }
]
