[
  {
    "name": "BDynamicEventDesigner",
    "desc": "BOA Dynamic event designer component.",
    "sample": "<BDynamicEventDesigner context={context} componentPropertySource={componentPropertySource} />"
  },
  {
    "name": "Props",
    "infoArray": [
      {
        "name": "historyItem",
        "type": "array",
        "header": "required",
        "desc": "History item for interaction."
      },
      {
        "name": "dividerVisibility",
        "type": "bool",
        "header": "required",
        "desc": "Defines icon theme."
      },
      {
        "name": "onInteractionTypeSelect",
        "type": "func",
        "header": "required",
        "desc": "Event for interaction type changed."
      },
      {
        "name": "onInteractionButtonClick",
        "type": "func",
        "header": "required",
        "desc": "Event to handle interaction button clicked."
      },
      {
        "name": "onDeleteButtonClick",
        "type": "func",
        "header": "required",
        "desc": " Event to handle delete button clicked."
      },
      {
        "name": "onMoveUpButtonClick",
        "type": "func",
        "header": "required",
        "desc": "Event to handle move up buton clicked."
      },
      {
        "name": "onMoveDownButtonClick",
        "type": "func",
        "header": "required",
        "desc": "Event to handle move down buton clicked."
      },
      {
        "name": "onDataComboSelect",
        "type": "func",
        "header": "required",
        "desc": "Event to handle combo selection."
      },
      {
        "name": "componentPropertySource",
        "type": "array",
        "header": "required",
        "desc": "The property source of component."
      }
    ]
  },
  {
    "name": "Events",
    "infoArray": [
      {
        "name": "onEventDataChanged",
        "header": "onEventDataChanged(eventData) => void",
        "desc": "When eventData is change, this event trigger"
      },
      {
        "name": "interactionTypeChanged",
        "header": "interactionTypeChanged(index, selectedItems, selectedValues)",
        "desc": "The function fired when interaction type is change"
      },
      {
        "name": "dataComboSelect",
        "header": "dataComboSelect(key: any, index, selectedItems, selectedValues)",
        "desc": "The function fired when data comba selected."
      },
      {
        "name": "staticValueChanged",
        "header": "staticValueChanged(key: any, b: any, checkValue: any) ",
        "desc": "The function fired when static value is change"
      }
    ]
  }
]
