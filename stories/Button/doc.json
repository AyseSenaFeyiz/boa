{
	"description": "Button Component is wrapped from `@material-ui/core/Button`.",
	"displayName": "Button",
	"methods": [
		{
			"name": "setDisable",
			"docblock": "Set disable to button\n@param {boolean} value\n@public",
			"modifiers": [],
			"params": [
				{
					"name": "value",
					"description": null,
					"type": {
						"name": "boolean"
					}
				}
			],
			"returns": null,
			"description": "Set disable to button"
		},
		{
			"name": "onClick",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "e",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getLabel",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "createButtonElement",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "variant",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "createIconButtonElement",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "createButton",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		}
	],
	"props": {
		"type": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "contained",
						"computed": false
					},
					{
						"value": "flat",
						"computed": false
					},
					{
						"value": "fab",
						"computed": false
					},
					{
						"value": "icon",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "Button type should be `contained`, `flat`, `fab` or `icon`.",
			"defaultValue": {
				"value": "contained",
				"computed": false
			}
		},
		"text": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Button content.",
			"defaultValue": {
				"value": "",
				"computed": false
			}
		},
		"textStyle": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Styles applied to the span element that wraps the children."
		},
		"textPosition": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "center",
						"computed": false
					},
					{
						"value": "left",
						"computed": false
					},
					{
						"value": "right",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "Text position on the button.",
			"defaultValue": {
				"value": "center",
				"computed": false
			}
		},
		"buttonSize": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "small",
						"computed": false
					},
					{
						"value": "medium",
						"computed": false
					},
					{
						"value": "large",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "Size of button.",
			"defaultValue": {
				"value": "medium",
				"computed": false
			}
		},
		"tooltip": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "If type 'icon' tooltip will generate on icon button"
		},
		"fontIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Font icon name from font icon's library."
		},
		"fullWidth": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If true, the button will take up the full width of its container."
		},
		"svgIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "SVG Icon name from material svg icon library."
		},
		"dynamicIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Icon name from BOA icon library."
		},
		"iconProperties": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Icon props"
		},
		"colorType": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "default",
						"computed": false
					},
					{
						"value": "inherit",
						"computed": false
					},
					{
						"value": "primary",
						"computed": false
					},
					{
						"value": "secondary",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "The color of the component. It supports those theme colors that make sense for this component."
		},
		"style": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Override the style of element"
		},
		"mini": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, and `variant` is `'fab'`, will use mini floating action button styling."
		},
		"disabled": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, the button will be disabled."
		},
		"onClick": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "@ignore"
		},
		"allowLabelCase": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `false` , content of the button wil be upper case",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"icon": {
			"type": {
				"name": "any"
			},
			"required": false,
			"description": "Custom icon"
		}
	},
	"composes": [
		"@boa/base"
	]
}