{
	"description": "This component visualizes the elements hierarchically.\nAlmost anything can be represented in a tree structure.\nSee the `./data/sampleData.js` for sample data.",
	"displayName": "TreeView",
	"methods": [
		{
			"name": "getFooterText",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getValue",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "resetValue",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "addChildNodes",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "newNodes",
					"type": null
				},
				{
					"name": "index",
					"type": null
				},
				{
					"name": "parentNode",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "appendChildNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "newNode",
					"type": null
				},
				{
					"name": "parentNode",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "checkNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "checked",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "closeNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "options",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getChildNodes",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "parentNode",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getNodeById",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "id",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getNodeFromPoint",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "x",
					"type": null
				},
				{
					"name": "y",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getOpenNodes",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getRootNode",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getSelectedNode",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getSelectedIndex",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getCheckedNodes",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getCheckedNodeIds",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "insertNodeAfter",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "newNode",
					"type": null
				},
				{
					"name": "referenceNode",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "insertNodeBefore",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "newNode",
					"type": null
				},
				{
					"name": "referenceNode",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "moveNodeTo",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "parentNode",
					"type": null
				},
				{
					"name": "index",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "openNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "removeNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "options",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "removeChildNodes",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "parentNode",
					"type": null
				},
				{
					"name": "options",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "scrollToNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "selectNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "swapNodes",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node1",
					"type": null
				},
				{
					"name": "node2",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "toggleNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "update",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "updateNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "data",
					"type": null
				},
				{
					"name": "options",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getFilteredNodes",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "clear",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "toString",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "isLeafSelected",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "expandAll",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "collapseAll",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "getSnapshot",
			"docblock": "Get Snapshot",
			"modifiers": [],
			"params": [],
			"returns": null,
			"description": "Get Snapshot"
		},
		{
			"name": "setSnapshot",
			"docblock": "Set Snapshot\n@param {*} snapshot",
			"modifiers": [],
			"params": [
				{
					"name": "snapshot",
					"description": null,
					"type": {
						"name": "mixed"
					}
				}
			],
			"returns": null,
			"description": "Set Snapshot"
		},
		{
			"name": "filterTree",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "keyword",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "handleOnSearchChange",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "name",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "handleOnCheckNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				},
				{
					"name": "checked",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "handleOnselectNode",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "node",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "handleOnKeyDown",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "event",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "handleOnSearchTextKeyDown",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "event",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "getStyle",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		}
	],
	"props": {
		"canCheckChildsByParent": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, when check a parent node, all of childs will be checked.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"caseSensitive": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, search field will be case sensitive.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"data": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "array"
					},
					{
						"name": "object"
					}
				]
			},
			"required": false,
			"description": "The data source of treeview element.",
			"defaultValue": {
				"value": [],
				"computed": false
			}
		},
		"exactMatch": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, search field will only match exact words.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"expandAll": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, treeview's all node will be expanded.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"footerStyle": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Overrides style of footer element."
		},
		"height": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "string"
					},
					{
						"name": "number"
					}
				]
			},
			"required": false,
			"description": "Height of tree element.",
			"defaultValue": {
				"value": 400,
				"computed": false
			}
		},
		"hintText": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Hint text of search element."
		},
		"includeAncestors": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "@ignore",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"includeDescendants": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "@ignore",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"isCheckable": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, all tree view nodes will be checkable.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"isLeafCheckable": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, only leaf nodes of tree view will be checkable.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"isMultiSelect": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, checkbox will appers in nodes and multi selection will be actived.\nIf `false`, radio button will appers in nodes and single selection will be actived.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"loadNodes": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when all nodes loaded."
		},
		"onCheckNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node checkes"
		},
		"onCloseNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node closes"
		},
		"onContentDidUpdate": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when content of treview did update."
		},
		"onContentWillUpdate": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when content of treview will update."
		},
		"onKeyDown": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when search element key down."
		},
		"onKeyUp": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when search element key up."
		},
		"onOpenNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node opens."
		},
		"onScroll": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when tree scrolls."
		},
		"onSelectNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node selects."
		},
		"onWillCloseNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node will close."
		},
		"onWillOpenNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node will open."
		},
		"onWillSelectNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback function when node will select."
		},
		"rowHeight": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "number"
					}
				]
			},
			"required": false,
			"description": "Row heigth of tree view nodes.",
			"defaultValue": {
				"value": 36,
				"computed": false
			}
		},
		"scrollOffset": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "@ignore"
		},
		"scrollToIndex": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "@ignore"
		},
		"selectable": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "@ignore",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"selectedNode": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "@ignore"
		},
		"selectedNodeId": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "@ignore"
		},
		"shouldSelectNode": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "@ignore"
		},
		"showFooter": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, footer of treeview is visible.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"showIcons": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, icons of all nodes is visible.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"showSearch": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, search input element is visible.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"tabIndex": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "Specifies the tab order to make tree focusable.",
			"defaultValue": {
				"value": 0,
				"computed": false
			}
		},
		"width": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "string"
					},
					{
						"name": "number"
					}
				]
			},
			"required": false,
			"description": "Width of tree view.",
			"defaultValue": {
				"value": "100%",
				"computed": false
			}
		}
	},
	"composes": [
		"@kuveytturk/boa-base"
	]
}