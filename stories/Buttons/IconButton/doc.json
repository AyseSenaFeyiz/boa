{
	"description": "Icon buttons allow users to take actions, and make choices, with a single tap.\nThis component is wrapped from `@material-ui/core/ButtonBase`.\nIt able to render an `<ToolTip />` when the \"tooltipTitle\" prop exists. IconButton\ncomponent extends ComponentBase from `@boa/base` and compose with withStyles\nfrom `@material-ui/core/styles` and ComponentComposer from `@boa/base`.",
	"displayName": "IconButton",
	"methods": [],
	"props": {
		"color": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "default",
						"computed": false
					},
					{
						"value": "inherit",
						"computed": false
					},
					{
						"value": "primary",
						"computed": false
					},
					{
						"value": "secondary",
						"computed": false
					},
					{
						"value": "disabled",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "The color of the component.\nIt supports those theme colors that make sense for this component.",
			"defaultValue": {
				"value": "default",
				"computed": false
			}
		},
		"disabled": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, the button will be disabled.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"disableRipple": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, the ripple will be disabled.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"dynamicIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Icon name from BOA icon library.",
			"defaultValue": {
				"value": "Home",
				"computed": false
			}
		},
		"focusRipple": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If `true`, the base button will have a keyboard focus ripple.\n`disableRipple` must also be `false`.",
			"defaultValue": {
				"value": true,
				"computed": false
			}
		},
		"fontIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "Font icon name from font icon's library."
		},
		"iconProperties": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Icon props that be passed to the `<Icon />` element."
		},
		"onClick": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "@ignore"
		},
		"style": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Override the style of element."
		},
		"svgIcon": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "SVG Icon name from material svg icon library."
		},
		"tooltip": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "If type 'icon' tooltip will generate on icon button."
		},
		"tooltipPosition": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "The position of the tooltip in button."
		}
	},
	"composes": [
		"@boa/base"
	]
}