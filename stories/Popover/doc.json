{
	"description": "",
	"displayName": "Popover",
	"methods": [
		{
			"name": "getValue",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "setValue",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "value",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "openPopover",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "manualOpen",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "openElement",
					"type": null
				},
				{
					"name": "width",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "manualClose",
			"docblock": null,
			"modifiers": [],
			"params": [],
			"returns": null
		},
		{
			"name": "onRequestClose",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "reason",
					"type": null
				}
			],
			"returns": null
		},
		{
			"name": "onResize",
			"docblock": null,
			"modifiers": [],
			"params": [
				{
					"name": "e",
					"type": null
				},
				{
					"name": "direction",
					"type": null
				},
				{
					"name": "refToResizableElement",
					"type": null
				}
			],
			"returns": null
		}
	],
	"props": {
		"action": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": ""
		},
		"anchorEl": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "object"
					},
					{
						"name": "func"
					}
				]
			},
			"required": false,
			"description": "This is the DOM element, or a function that returns the DOM element,\nthat may be used to set the position of the popover."
		},
		"anchorOrigin": {
			"type": {
				"name": "shape",
				"value": {
					"horizontal": {
						"name": "union",
						"value": [
							{
								"name": "number"
							},
							{
								"name": "enum",
								"value": [
									{
										"value": "left",
										"computed": false
									},
									{
										"value": "center",
										"computed": false
									},
									{
										"value": "right",
										"computed": false
									}
								]
							}
						],
						"required": false
					},
					"vertical": {
						"name": "union",
						"value": [
							{
								"name": "number"
							},
							{
								"name": "enum",
								"value": [
									{
										"value": "top",
										"computed": false
									},
									{
										"value": "center",
										"computed": false
									},
									{
										"value": "bottom",
										"computed": false
									}
								]
							}
						],
						"required": false
					}
				}
			},
			"required": false,
			"description": "This is the point on the anchor where the popover's\n`anchorEl` will attach to. This is not used when the\nanchorReference is 'anchorPosition'.\n\nOptions:\nvertical: [top, center, bottom];\nhorizontal: [left, center, right].",
			"defaultValue": {
				"value": "{\n  vertical: 'top',\n  horizontal: 'left',\n}",
				"computed": false
			}
		},
		"anchorPosition": {
			"type": {
				"name": "shape",
				"value": {
					"left": {
						"name": "number",
						"required": false
					},
					"top": {
						"name": "number",
						"required": false
					}
				}
			},
			"required": false,
			"description": "This is the position that may be used\nto set the position of the popover.\nThe coordinates are relative to\nthe application's client area."
		},
		"anchorReference": {
			"type": {
				"name": "enum",
				"value": [
					{
						"value": "anchorEl",
						"computed": false
					},
					{
						"value": "anchorPosition",
						"computed": false
					}
				]
			},
			"required": false,
			"description": "",
			"defaultValue": {
				"value": "anchorEl",
				"computed": false
			}
		},
		"children": {
			"type": {
				"name": "node"
			},
			"required": false,
			"description": "The content of the component."
		},
		"classes": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Useful to extend the style applied to components."
		},
		"container": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "object"
					},
					{
						"name": "func"
					}
				]
			},
			"required": false,
			"description": "A node, component instance, or function that returns either.\nThe `container` will passed to the Modal component.\nBy default, it's using the body of the anchorEl's top-level document object,\nso it's simply `document.body` most of the time."
		},
		"disableRestoreFocus": {
			"type": {
				"name": "bool"
			},
			"required": false,
			"description": "If true, the modal will not restore focus to previously focused element once modal is hidden.",
			"defaultValue": {
				"value": false,
				"computed": false
			}
		},
		"elevation": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "The elevation of the popover.",
			"defaultValue": {
				"value": 8,
				"computed": false
			}
		},
		"getContentAnchorEl": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "This function is called in order to retrieve the content anchor element.\nIt's the opposite of the `anchorEl` property.\nThe content anchor element should be an element inside the popover.\nIt's used to correctly scroll and set the position of the popover.\nThe positioning strategy tries to make the content anchor element just above the\nanchor element."
		},
		"marginThreshold": {
			"type": {
				"name": "number"
			},
			"required": false,
			"description": "Specifies how close to the edge of the window the popover can appear.",
			"defaultValue": {
				"value": 16,
				"computed": false
			}
		},
		"onClose": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired when the component requests to be closed.\n\n@param {object} event The event source of the callback."
		},
		"onEnter": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired before the component is entering."
		},
		"onEntered": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired when the component has entered."
		},
		"onEntering": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired when the component is entering."
		},
		"onExit": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired before the component is exiting."
		},
		"onExited": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired when the component has exited."
		},
		"onExiting": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": "Callback fired when the component is exiting."
		},
		"onRequestClose": {
			"type": {
				"name": "func"
			},
			"required": false,
			"description": ""
		},
		"open": {
			"type": {
				"name": "bool"
			},
			"required": true,
			"description": "If `true`, the popover is visible."
		},
		"PaperProps": {
			"type": {
				"name": "object"
			},
			"required": false,
			"description": "Properties applied to the `Paper` element."
		},
		"role": {
			"type": {
				"name": "string"
			},
			"required": false,
			"description": "@ignore"
		},
		"transformOrigin": {
			"type": {
				"name": "shape",
				"value": {
					"horizontal": {
						"name": "union",
						"value": [
							{
								"name": "number"
							},
							{
								"name": "enum",
								"value": [
									{
										"value": "left",
										"computed": false
									},
									{
										"value": "center",
										"computed": false
									},
									{
										"value": "right",
										"computed": false
									}
								]
							}
						],
						"required": false
					},
					"vertical": {
						"name": "union",
						"value": [
							{
								"name": "number"
							},
							{
								"name": "enum",
								"value": [
									{
										"value": "top",
										"computed": false
									},
									{
										"value": "center",
										"computed": false
									},
									{
										"value": "bottom",
										"computed": false
									}
								]
							}
						],
						"required": false
					}
				}
			},
			"required": false,
			"description": "This is the point on the popover which\nwill attach to the anchor's origin.\n\nOptions:\nvertical: [top, center, bottom, x(px)];\nhorizontal: [left, center, right, x(px)].",
			"defaultValue": {
				"value": "{\n  vertical: 'top',\n  horizontal: 'left',\n}",
				"computed": false
			}
		},
		"transition": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "string"
					},
					{
						"name": "func"
					}
				]
			},
			"required": false,
			"description": "Transition component."
		},
		"transitionDuration": {
			"type": {
				"name": "union",
				"value": [
					{
						"name": "number"
					},
					{
						"name": "shape",
						"value": {
							"enter": {
								"name": "number",
								"required": false
							},
							"exit": {
								"name": "number",
								"required": false
							}
						}
					},
					{
						"name": "enum",
						"value": [
							{
								"value": "auto",
								"computed": false
							}
						]
					}
				]
			},
			"required": false,
			"description": "Set to 'auto' to automatically calculate transition time based on height.",
			"defaultValue": {
				"value": "auto",
				"computed": false
			}
		}
	},
	"composes": [
		"@boa/base"
	]
}